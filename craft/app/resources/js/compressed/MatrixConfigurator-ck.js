/*
 Copyright (c) 2014, Pixel & Tonic, Inc.
 @license   http://buildwithcraft.com/license Craft License Agreement
 @link      http://buildwithcraft.com
*/(function(e){Craft.MatrixConfigurator=Garnish.Base.extend({fieldTypeInfo:null,inputNamePrefix:null,inputIdPrefix:null,$container:null,$blockTypesColumnContainer:null,$fieldsColumnContainer:null,$fieldSettingsColumnContainer:null,$blockTypeItemsContainer:null,$fieldItemsContainer:null,$fieldSettingItemsContainer:null,$newBlockTypeBtn:null,$newFieldBtn:null,blockTypes:null,selectedBlockType:null,blockTypeSort:null,totalNewBlockTypes:0,init:function(t,r){this.fieldTypeInfo=t;this.inputNamePrefix=r;this.inputIdPrefix=Craft.formatInputId(this.inputNamePrefix);this.$container=e(".matrix-configurator:first .input:first");this.$blockTypesColumnContainer=this.$container.children(".block-types").children();this.$fieldsColumnContainer=this.$container.children(".fields").children();this.$fieldSettingsColumnContainer=this.$container.children(".field-settings").children();this.$blockTypeItemsContainer=this.$blockTypesColumnContainer.children(".items");this.$fieldItemsContainer=this.$fieldsColumnContainer.children(".items");this.$fieldSettingItemsContainer=this.$fieldSettingsColumnContainer.children(".items");this.setContainerHeight();this.$newBlockTypeBtn=this.$blockTypeItemsContainer.children(".btn");this.$newFieldBtn=this.$fieldItemsContainer.children(".btn");this.blockTypes={};for(var i=this.$blockTypeItemsContainer.children(".matrixconfigitem"),s=0;s<i.length;s++){var o=e(i[s]),u=o.data("id");this.blockTypes[u]=new n(this,o);(o="string"==typeof u&&u.match(/new(\d+)/))&&o[1]>this.totalNewBlockTypes&&(this.totalNewBlockTypes=parseInt(o[1]))}this.blockTypeSort=new Garnish.DragSort(i,{caboose:"<div/>",handle:".move",axis:"y"});this.addListener(this.$newBlockTypeBtn,"click","addBlockType");this.addListener(this.$newFieldBtn,"click","addFieldToSelectedBlockType");this.addListener(this.$blockTypesColumnContainer,"resize","setContainerHeight");this.addListener(this.$fieldsColumnContainer,"resize","setContainerHeight");this.addListener(this.$fieldSettingsColumnContainer,"resize","setContainerHeight")},setContainerHeight:function(){setTimeout(e.proxy(function(){var e=Math.max(this.$blockTypesColumnContainer.height(),this.$fieldsColumnContainer.height(),this.$fieldSettingsColumnContainer.height(),400);this.$container.height(e)},this),1)},getFieldTypeInfo:function(e){for(var t=0;t<this.fieldTypeInfo.length;t++)if(this.fieldTypeInfo[t].type==e)return this.fieldTypeInfo[t]},addBlockType:function(){this.getBlockTypeSettingsModal();this.blockTypeSettingsModal.show();this.blockTypeSettingsModal.onSubmit=e.proxy(function(t,r){this.totalNewBlockTypes++;var i="new"+this.totalNewBlockTypes,s=e('<div class="matrixconfigitem mci-blocktype" data-id="'+i+'"><div class="name"></div><div class="handle code"></div><div class="actions"><a class="move icon" title="'+Craft.t("Reorder")+'"></a><a class="settings icon" title="'+Craft.t("Settings")+'"></a></div><input class="hidden" name="types[Matrix][blockTypes]['+i+'][name]"><input class="hidden" name="types[Matrix][blockTypes]['+i+'][handle]"></div>').insertBefore(this.$newBlockTypeBtn);this.blockTypes[i]=new n(this,s);this.blockTypes[i].applySettings(t,r);this.blockTypes[i].select();this.blockTypes[i].addField();this.blockTypeSort.addItems(s)},this)},addFieldToSelectedBlockType:function(){this.selectedBlockType&&this.selectedBlockType.addField()},getBlockTypeSettingsModal:function(){this.blockTypeSettingsModal||(this.blockTypeSettingsModal=new t);return this.blockTypeSettingsModal}});var t=Garnish.Modal.extend({init:function(){this.base();this.$form=e('<form class="modal fitted"/>').appendTo(Garnish.$bod);this.setContainer(this.$form);this.$body=e('<div class="body"/>').appendTo(this.$form);this.$nameField=e('<div class="field"/>').appendTo(this.$body);this.$nameHeading=e('<div class="heading"/>').appendTo(this.$nameField);this.$nameLabel=e('<label for="new-block-type-name">'+Craft.t("Name")+"</label>").appendTo(this.$nameHeading);this.$nameInstructions=e('<div class="instructions"><p>'+Craft.t("What this block type will be called in the CP.")+"</p></div>").appendTo(this.$nameHeading);this.$nameInputContainer=e('<div class="input"/>').appendTo(this.$nameField);this.$nameInput=e('<input type="text" class="text fullwidth" id="new-block-type-name"/>').appendTo(this.$nameInputContainer);this.$nameErrorList=e('<ul class="errors"/>').appendTo(this.$nameInputContainer).hide();this.$handleField=e('<div class="field"/>').appendTo(this.$body);this.$handleHeading=e('<div class="heading"/>').appendTo(this.$handleField);this.$handleLabel=e('<label for="new-block-type-handle">'+Craft.t("Handle")+"</label>").appendTo(this.$handleHeading);this.$handleInstructions=e('<div class="instructions"><p>'+Craft.t("How youâ€™ll refer to this block type in the templates.")+"</p></div>").appendTo(this.$handleHeading);this.$handleInputContainer=e('<div class="input"/>').appendTo(this.$handleField);this.$handleInput=e('<input type="text" class="text fullwidth code" id="new-block-type-handle"/>').appendTo(this.$handleInputContainer);this.$handleErrorList=e('<ul class="errors"/>').appendTo(this.$handleInputContainer).hide();this.$deleteBtn=e('<a class="error left hidden" style="line-height: 30px;">'+Craft.t("Delete")+"</a>").appendTo(this.$body);this.$buttons=e('<div class="buttons right" style="margin-top: 0;"/>').appendTo(this.$body);this.$cancelBtn=e('<div class="btn">'+Craft.t("Cancel")+"</div>").appendTo(this.$buttons);this.$submitBtn=e('<input type="submit" class="btn submit"/>').appendTo(this.$buttons);this.handleGenerator=new Craft.HandleGenerator(this.$nameInput,this.$handleInput);this.addListener(this.$cancelBtn,"click","hide");this.addListener(this.$form,"submit","onFormSubmit");this.addListener(this.$deleteBtn,"click","onDeleteClick")},onFormSubmit:function(e){e.preventDefault();if(this.visible){this.handleGenerator.listening&&this.handleGenerator.updateTarget();e=Craft.trim(this.$nameInput.val());var t=Craft.trim(this.$handleInput.val());e&&t?(this.hide(),this.onSubmit(e,t)):Garnish.shake(this.$form)}},onDeleteClick:function(){confirm(Craft.t("Are you sure you want to delete this block type?"))&&(this.hide(),this.onDelete())},show:function(t,n,r){this.$nameInput.val("string"==typeof t?t:"");this.$handleInput.val("string"==typeof n?n:"");n?this.handleGenerator.stopListening():this.handleGenerator.startListening();"undefined"==typeof t?(this.$deleteBtn.addClass("hidden"),this.$submitBtn.val(Craft.t("Create"))):(this.$deleteBtn.removeClass("hidden"),this.$submitBtn.val(Craft.t("Save")));this.displayErrors("name",r?r.name:null);this.displayErrors("handle",r?r.handle:null);Garnish.isMobileBrowser()||setTimeout(e.proxy(function(){this.$nameInput.focus()},this),100);this.base()},displayErrors:function(t,n){var r=this["$"+t+"Input"],i=this["$"+t+"ErrorList"];i.children().remove();if(n)for(r.addClass("error"),i.show(),r=0;r<n.length;r++)e("<li/>").text(n[r]).appendTo(i);else r.removeClass("error"),i.hide()}}),n=Garnish.Base.extend({configurator:null,id:null,errors:null,inputNamePrefix:null,inputIdPrefix:null,$item:null,$nameLabel:null,$handleLabel:null,$nameHiddenInput:null,$handleHiddenInput:null,$settingsBtn:null,$fieldItemsContainer:null,$fieldSettingsContainer:null,fields:null,selectedField:null,fieldSort:null,totalNewFields:0,fieldSettings:null,init:function(t,n){this.configurator=t;this.$item=n;this.id=this.$item.data("id");this.errors=this.$item.data("errors");this.inputNamePrefix=this.configurator.inputNamePrefix+"[blockTypes]["+this.id+"]";this.inputIdPrefix=this.configurator.inputIdPrefix+"-blockTypes-"+this.id;this.$nameLabel=this.$item.children(".name");this.$handleLabel=this.$item.children(".handle");this.$nameHiddenInput=this.$item.find('input[name$="[name]"]:first');this.$handleHiddenInput=this.$item.find('input[name$="[handle]"]:first');this.$settingsBtn=this.$item.find(".settings");this.$fieldItemsContainer=this.configurator.$fieldItemsContainer.children('[data-id="'+this.id+'"]:first');this.$fieldItemsContainer.length||(this.$fieldItemsContainer=e('<div data-id="'+this.id+'"/>').insertBefore(this.configurator.$newFieldBtn));this.$fieldSettingsContainer=this.configurator.$fieldSettingItemsContainer.children('[data-id="'+this.id+'"]:first');this.$fieldSettingsContainer.length||(this.$fieldSettingsContainer=e('<div data-id="'+this.id+'"/>').appendTo(this.configurator.$fieldSettingItemsContainer));this.fields={};for(var r=this.$fieldItemsContainer.children(),i=0;i<r.length;i++){var s=e(r[i]),o=s.data("id");this.fields[o]=new Field(this.configurator,this,s);(s="string"==typeof o&&o.match(/new(\d+)/))&&s[1]>this.totalNewFields&&(this.totalNewFields=parseInt(s[1]))}this.addListener(this.$item,"click","select");this.addListener(this.$settingsBtn,"click","showSettings");this.fieldSort=new Garnish.DragSort(r,{caboose:"<div/>",handle:".move",axis:"y",onSortChange:e.proxy(function(){for(var t=0;t<this.fieldSort.$items.length;t++){var n=e(this.fieldSort.$items[t]).data("id");this.fields[n].$fieldSettingsContainer.appendTo(this.$fieldSettingsContainer)}},this)})},select:function(){this.configurator.selectedBlockType!=this&&(this.configurator.selectedBlockType&&this.configurator.selectedBlockType.deselect(),this.configurator.$fieldsColumnContainer.removeClass("hidden").trigger("resize"),this.$fieldItemsContainer.removeClass("hidden"),this.$item.addClass("sel"),this.configurator.selectedBlockType=this)},deselect:function(){this.$item.removeClass("sel");this.configurator.$fieldsColumnContainer.addClass("hidden").trigger("resize");this.$fieldItemsContainer.addClass("hidden");this.$fieldSettingsContainer.addClass("hidden");this.configurator.selectedBlockType=null;this.selectedField&&this.selectedField.deselect()},showSettings:function(){var t=this.configurator.getBlockTypeSettingsModal();t.show(this.$nameHiddenInput.val(),this.$handleHiddenInput.val(),this.errors);t.onSubmit=e.proxy(this,"applySettings");t.onDelete=e.proxy(this,"selfDestruct")},applySettings:function(e,t){this.errors&&(this.errors=null,this.$settingsBtn.removeClass("error"));this.$nameLabel.text(e);this.$handleLabel.text(t);this.$nameHiddenInput.val(e);this.$handleHiddenInput.val(t)},addField:function(){this.totalNewFields++;var t="new"+this.totalNewFields,n=e('<div class="matrixconfigitem mci-field" data-id="'+t+'"><div class="name">&nbsp;</div><div class="handle code">&nbsp;</div><div class="actions"><a class="move icon" title="'+Craft.t("Reorder")+'"></a></div></div>').appendTo(this.$fieldItemsContainer);this.fields[t]=new Field(this.configurator,this,n);this.fields[t].select();this.fieldSort.addItems(n)},selfDestruct:function(){this.deselect();this.$item.remove();this.$fieldItemsContainer.remove();this.$fieldSettingsContainer.remove();this.configurator.blockTypes[this.id]=null;delete this.configurator.blockTypes[this.id]}});Field=Garnish.Base.extend({configurator:null,blockType:null,id:null,inputNamePrefix:null,inputIdPrefix:null,selectedFieldType:null,initializedFieldTypeSettings:null,$item:null,$nameLabel:null,$handleLabel:null,$fieldSettingsContainer:null,$nameInput:null,$handleInput:null,$requiredCheckbox:null,$typeSelect:null,$typeSettingsContainer:null,$deleteBtn:null,init:function(t,n,r){this.configurator=t;this.blockType=n;this.$item=r;this.id=this.$item.data("id");this.inputNamePrefix=this.blockType.inputNamePrefix+"[fields]["+this.id+"]";this.inputIdPrefix=this.blockType.inputIdPrefix+"-fields-"+this.id;this.initializedFieldTypeSettings={};this.$nameLabel=this.$item.children(".name");this.$handleLabel=this.$item.children(".handle");this.$fieldSettingsContainer=this.blockType.$fieldSettingsContainer.children('[data-id="'+this.id+'"]:first');if(t=!this.$fieldSettingsContainer.length)this.$fieldSettingsContainer=e(this.getDefaultFieldSettingsHtml()).appendTo(this.blockType.$fieldSettingsContainer);this.$nameInput=this.$fieldSettingsContainer.find('input[name$="[name]"]:first');this.$handleInput=this.$fieldSettingsContainer.find('input[name$="[handle]"]:first');this.$requiredCheckbox=this.$fieldSettingsContainer.find('input[type="checkbox"][name$="[required]"]:first');this.$typeSelect=this.$fieldSettingsContainer.find('select[name$="[type]"]:first');this.$typeSettingsContainer=this.$fieldSettingsContainer.children(".fieldtype-settings:first");this.$deleteBtn=this.$fieldSettingsContainer.children("a.delete:first");t?this.setFieldType("PlainText"):(this.selectedFieldType=this.$typeSelect.val(),this.initializedFieldTypeSettings[this.selectedFieldType]=this.$typeSettingsContainer.children());this.$handleInput.val()||new Craft.HandleGenerator(this.$nameInput,this.$handleInput);this.addListener(this.$item,"click","select");this.addListener(this.$nameInput,"textchange","updateNameLabel");this.addListener(this.$handleInput,"textchange","updateHandleLabel");this.addListener(this.$requiredCheckbox,"change","updateRequiredIcon");this.addListener(this.$typeSelect,"change","onTypeSelectChange");this.addListener(this.$deleteBtn,"click","confirmDelete")},select:function(){this.blockType.selectedField!=this&&(this.blockType.selectedField&&this.blockType.selectedField.deselect(),this.configurator.$fieldSettingsColumnContainer.removeClass("hidden").trigger("resize"),this.blockType.$fieldSettingsContainer.removeClass("hidden"),this.$fieldSettingsContainer.removeClass("hidden"),this.$item.addClass("sel"),this.blockType.selectedField=this,Garnish.isMobileBrowser()||setTimeout(e.proxy(function(){this.$nameInput.focus()},this),100))},deselect:function(){this.$item.removeClass("sel");this.configurator.$fieldSettingsColumnContainer.addClass("hidden").trigger("resize");this.blockType.$fieldSettingsContainer.addClass("hidden");this.$fieldSettingsContainer.addClass("hidden");this.blockType.selectedField=null},updateNameLabel:function(){this.$nameLabel.html(Craft.escapeHtml(this.$nameInput.val())+"&nbsp;")},updateHandleLabel:function(){this.$handleLabel.html(Craft.escapeHtml(this.$handleInput.val())+"&nbsp;")},updateRequiredIcon:function(){this.$requiredCheckbox.prop("checked")?this.$nameLabel.addClass("required"):this.$nameLabel.removeClass("required")},onTypeSelectChange:function(){this.setFieldType(this.$typeSelect.val())},setFieldType:function(t){this.selectedFieldType&&this.initializedFieldTypeSettings[this.selectedFieldType].detach();this.selectedFieldType=t;this.$typeSelect.val(t);var n="undefined"==typeof this.initializedFieldTypeSettings[t];if(n){var r=this.configurator.getFieldTypeInfo(t),i=this.getParsedFieldTypeHtml(r.settingsBodyHtml),r=this.getParsedFieldTypeHtml(r.settingsFootHtml),i=e("<div>"+i+"</div>");this.initializedFieldTypeSettings[t]=i}else i=this.initializedFieldTypeSettings[t];i.appendTo(this.$typeSettingsContainer);n&&(Craft.initUiElements(i),e("body").append(r))},getParsedFieldTypeHtml:function(e){"string"==typeof e?(e=e.replace(/__BLOCK_TYPE__/g,this.blockType.id),e=e.replace(/__FIELD__/g,this.id)):e="";return e},getDefaultFieldSettingsHtml:function(){var e='<div data-id="'+this.id+'"><div class="field" id="'+this.inputIdPrefix+'-name-field"><div class="heading"><label class="required" for="'+this.inputIdPrefix+'-name">'+Craft.t("Name")+'</label></div><div class="input"><input class="text fullwidth" type="text" id="'+this.inputIdPrefix+'-name" name="'+this.inputNamePrefix+'[name]" autofocus="" autocomplete="off"/></div></div><div class="field" id="'+this.inputIdPrefix+'-handle-field"><div class="heading"><label class="required" for="'+this.inputIdPrefix+'-handle">'+Craft.t("Handle")+'</label></div><div class="input"><input class="text fullwidth code" type="text" id="'+this.inputIdPrefix+'-handle" name="'+this.inputNamePrefix+'[handle]" autofocus="" autocomplete="off"/></div></div><div class="field checkbox"><label><input type="hidden" name="'+this.inputNamePrefix+'[required]" value=""/><input type="checkbox" value="1" name="'+this.inputNamePrefix+'[required]"/> '+Craft.t("This field is required")+"</label></div>";Craft.isLocalized&&(e+='<div class="field checkbox"><label><input type="hidden" name="'+this.inputNamePrefix+'[translatable]" value=""/><input type="checkbox" value="1" name="'+this.inputNamePrefix+'[translatable]"/> '+Craft.t("This field is translatable")+"</label></div>");for(var e=e+('<hr/><div class="field" id="type-field"><div class="heading"><label for="type">'+Craft.t("Field Type")+'</label></div><div class="input"><div class="select"><select id="type" class="fieldtoggle" name="'+this.inputNamePrefix+'[type]">'),t=0;t<this.configurator.fieldTypeInfo.length;t++)var n=this.configurator.fieldTypeInfo[t],e=e+('<option value="'+n.type+'"'+("PlainText"==n.type?' selected=""':"")+">"+n.name+"</option>");return e+='</select></div></div></div><div class="fieldtype-settings"/><hr/><a class="error delete">'+Craft.t("Delete")+"</a></div>"},confirmDelete:function(){confirm(Craft.t("Are you sure you want to delete this field?"))&&this.selfDestruct()},selfDestruct:function(){this.deselect();this.$item.remove();this.$fieldSettingsContainer.remove();this.blockType.fields[this.id]=null;delete this.blockType.fields[this.id]}})})(jQuery);